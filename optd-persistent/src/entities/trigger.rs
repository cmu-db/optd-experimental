//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "trigger")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub table_id: i32,
    pub name: String,
    pub parent_trigger_id: i32,
    pub function: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::table_metadata::Entity",
        from = "Column::TableId",
        to = "super::table_metadata::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TableMetadata,
    #[sea_orm(
        belongs_to = "Entity",
        from = "Column::ParentTriggerId",
        to = "Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    SelfRef,
}

impl Related<super::table_metadata::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TableMetadata.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
